#! /bin/bash
in=$(cat)
#tput rmam >&2
#tmux supports \e[7l, but not tput rmam
echo -ne '\e[?7l' >&2
tput civis >&2
Blockon=$'\e[30;47m'
Blockoff=$'\e[m'
IFS=$'\n'
lim=$(tput lines)
((lim-=1))
cols=$(tput cols)
pb=$1
pa=
display=()
change=1
sel=0
end=0

trap 'tput cnorm >&2; echo -ne "\e[?7h" >&2; tput smam >&2; stty echo >&2 </dev/tty; exit' EXIT INT QUIT TERM HUP

while ((end==0)); do

((change==1)) && {
tempin=$in
if [[ $pb$pa ]]; then
display=(
  $(for entry in $(echo "$pb$pa" | tr ' ' '\n'); do
	tempin=$(echo "$tempin" | fgrep -i -- "$entry")
    done
    echo "$tempin" )
)
change=0
sel=0
else
readarray -t display <<< "$in"
fi
}

total=${#display[@]}
((total < lim)) && h=$total || h=$lim
pages=$(( total / lim))
(( total % lim == 0)) && ((pages--))

((sel < 0)) && sel=0
((sel >= total)) && sel=$((total -1))

page=$((sel / lim))
((page==pages)) && lastpage=$'\e[7m' || lastpage=$'\e[0m'
echo -n "${lastpage}p$page/$pages"$'\e[m'": $pb$Blockon${pa:0:1}$(! [[ $pa ]] && echo -n ' ')$Blockoff${pa:1}" >&2

for ((count = lim *(sel / lim); count < lim+ lim*(sel/lim); count++)); do
[[ $count == $total && $page == 0 ]] && break || echo $'\e[m' >&2
((sel == count)) && echo -n $'\e[46;30m' >&2
echo -n "${display[$count]}" >&2
((sel==count)) && for ((colcount=0;colcount<cols;colcount++)); do echo -n ' ' >&2; done && echo -n $'\e[m' >&2
done

read -n1 -s key < /dev/tty
[[ $key ]] || key=ENTER
if [[ "$key" == $'\e' ]]; then
	key=ESC
	while true; do
		read -n 1 -t 0.01 -s newk < /dev/tty
		[[ "$newk" == $'\e' ]] && newk=ESC
		key=${key}${newk}
		[[ -z "$newk" || "$newk" =~ [~A-Da-d] ]] && break
	done
fi

case "$key" in
'ESC[A')	((sel--));; #UP
'ESC[B')	((sel++));; #DOWN
'ESC[6~')	((sel+=lim));; #PGDN
'ESC[5~')	((sel-=lim));; #PGUP
'ESC[4~'|'ESC[F'|'ESC[8~'|'ESCOF')	((sel=$total));; #END
'ESC[1~'|'ESC[H'|'ESC[7~'|'ESCOH')	((sel=0));; #HOME
'ESC[D')	pa=${pb: -1}$pa; pb=${pb%?};; #LEFT
'ESC[C') 	pb=$pb${pa:0:1}; pa=${pa:1};; #RIGHT
$'\x7f'|$'\x08')	pb=${pb%?}; change=1;; #backspace
'ESC[3~')	pa=${pa:1}; change=1;; #delete
'ENTER')
if (( "${#display[$sel]}" > 1)); then
pb=; pa=${display[$sel]}; end=1
else
end=1
fi
;;
'ESC')		pb=; pa=; end=1;; #ESC
'ESC[12~'|'ESCOQ') end=1;; #F2
$'\x09'|$'\t')	pb=${display[$sel]}; pa=; change=1;; #TAB
ESC*)	:;; #other special keys
*)	change=1; pb=$pb$key;;
esac
for (( count=0; count < $h; count++)); do
	echo -ne "\e[2K\e[A\r" >&2
done
echo -ne '\e[2K\r' >&2
done
echo "$pa$pb"